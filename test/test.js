/* global it,describe,before */

const assert = require('assert');
const getMessageParser = require('../index');
const nock = require('nock');

const roomId = 'user:81f14b7c-0905-11e5-80de-42010af0e00d:web';
const rawMessage = ['v2', '1526499854203288168', 'Hello World!', ['web', 'cc1', 'cc1', 'owner', '#913D88', [['owner', 0, null]], ['gav', 0, ['2e62a29500a51597f78863d877f2d8d2', '6']], 'a4001b62-46a4-4f12-9368-238de75af9d8'], [], [], [], [], 1526499854, null, null];

describe('Message Parser', function () {
	it('provides message parsing function to callback when passed a room id', function (done) {
		nockSuccess();
		getMessageParser(roomId, function (err, messageParser) {
			assert(!err);
			assert(typeof messageParser === 'function');
			done();
		});
	});

	it("calls back with error if roomId doesn't exist", function (done) {
		this.timeout(6000);
		nockRoomNotFound();
		getMessageParser("this roomId doesn't exist", function (err, messageParser) {
			assert(err);
			console.log("This room doesn't exist");
			done();
		});
	});

	describe('messageParser', function () {
		var parseMessage;
		before(function (done) {
			nockSuccess();
			getMessageParser(roomId, function (err, messageParser) {
				assert(!err);
				parseMessage = messageParser;
				done();
			});
		});

		it('throws an error when passed an invalid raw message', function (done) {
			var exceptionCaught = false;
			try {
				parseMessage([4]);
			}			catch (errIgnore) {
				exceptionCaught = true;
			}
			assert(exceptionCaught);
			done();
		});

		it('throws an error when passed no raw message', function (done) {
			var exceptionCaught = false;
			try {
				parseMessage();
			}			catch (errIgnore) {
				exceptionCaught = true;
			}
			assert(exceptionCaught);
			done();
		});

		it('returns an object when passed a raw message and an existing room ID', function (done) {
			const message = parseMessage(rawMessage);
			assert(typeof message === 'object');
			done();
		});

		it('returns the correct object when passed a raw message and an existing room ID', function (done) {
			const message = parseMessage(rawMessage);
			assert(message.message === 'Hello World!');
			done();
		});
	});
});

function nockSuccess () {
	nock('https://www.stream.me:443', {'encodedQueryParams': true})
	.get('/api-web/v1/chat/room/user:81f14b7c-0905-11e5-80de-42010af0e00d:web')
	.reply(200, {'roomId': 'user:81f14b7c-0905-11e5-80de-42010af0e00d:web', 'parserManifests': {'urlTemplates': {'admin': 'https://user-image.creekcdn.com/mediasvc/v1/badge/admin/v/0/res/19x19/standard.png', 'av': 'https://user-image.creekcdn.com/mediasvc/v1/user/avatar/v/{{n}}/res/256x256/{{n}}.jpg', 'bav': 'https://static1.stream.me/web/active/images/robot-avatar.png', 'g': 'https://static1.stream.me/embed/active/images/guest-avatar-{{n}}.png', 'gav': 'https://www.gravatar.com/avatar/{{n}}?s=256&d=https://static1.stream.me/web/active/images/avatar-id-{{n}}.png', 'ge': 'https://stream-me.storage.googleapis.com/emoticon/global/{{n}}.png', 'moderator': 'https://user-image.creekcdn.com/mediasvc/v1/badge/moderator/v/0/res/19x19/standard.png', 'owner': 'https://user-image.creekcdn.com/mediasvc/v1/badge/owner/v/0/res/19x19/standard.png', 'ra': 'https://static1.stream.me/web/active/images/avatar-id-{{n}}.png', 's': 'www.stream.me/s/{{n}}', 'subscriber': 'https://user-image.creekcdn.com/mediasvc/v1/badge/subscriber/v/5/res/19x19/81f14b7c-0905-11e5-80de-42010af0e00d.png', 'subscriber:streamme': 'https://user-image.creekcdn.com/mediasvc/v1/badge/subscriber/v/5/res/19x19/81f14b7c-0905-11e5-80de-42010af0e00d.png', 'supporter': 'https://user-image.creekcdn.com/mediasvc/v1/badge/supporter/v/4/res/19x19/81f14b7c-0905-11e5-80de-42010af0e00d.png', 'supporter:streamme': 'https://user-image.creekcdn.com/mediasvc/v1/badge/supporter/v/4/res/19x19/81f14b7c-0905-11e5-80de-42010af0e00d.png', 'ue': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/{{n}}/res/28/{{n}}.png'}, 'urlTemplateTypes': {'ge': {'gif': 'https://stream-me.storage.googleapis.com/emoticon/global/{{n}}.gif', 'png': 'https://stream-me.storage.googleapis.com/emoticon/global/{{n}}.png'}, 'ue': {'gif': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/{{n}}/res/28/{{n}}.gif', 'png': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/{{n}}/res/28/{{n}}.png'}}, 'manifests': {'v2': {'actor': {'index': 3, 'type': 'nestedObject', 'nestedItems': {'appSlug': {'index': 0, 'type': 'string'}, 'avatar': {'index': 6, 'type': 'urlTemplate', 'nestedItems': {'hasMultipleTypes': {'index': 1, 'type': 'int'}, 'key': {'index': 0, 'type': 'string'}, 'vars': {'index': 2, 'type': 'stringArray'}}}, 'badges': {'index': 5, 'type': 'urlTemplates', 'nestedItems': {'hasMultipleTypes': {'index': 1, 'type': 'int'}, 'key': {'index': 0, 'type': 'string'}, 'vars': {'index': 2, 'type': 'stringArray'}}}, 'color': {'index': 4, 'type': 'string'}, 'role': {'index': 3, 'type': 'string'}, 'slug': {'index': 2, 'type': 'string'}, 'userPublicID': {'index': 7, 'type': 'string'}, 'username': {'index': 1, 'type': 'string'}}}, 'emoticons': {'index': 4, 'type': 'nestedArray', 'nestedItems': {'length': {'index': 1, 'type': 'int'}, 'pattern': {'index': 0, 'type': 'string'}, 'positions': {'index': 2, 'type': 'intArray'}, 'urlTemplate': {'index': 3, 'type': 'urlTemplate', 'nestedItems': {'hasMultipleTypes': {'index': 1, 'type': 'int'}, 'key': {'index': 0, 'type': 'string'}, 'vars': {'index': 2, 'type': 'stringArray'}}}}}, 'id': {'index': 1, 'type': 'string'}, 'links': {'index': 7, 'type': 'nestedArray', 'nestedItems': {'href': {'index': 0, 'type': 'url'}, 'length': {'index': 1, 'type': 'int'}, 'positions': {'index': 2, 'type': 'intArray'}}}, 'mentions': {'index': 5, 'type': 'nestedArray', 'nestedItems': {'length': {'index': 3, 'type': 'int'}, 'positions': {'index': 4, 'type': 'intArray'}, 'publicId': {'index': 2, 'type': 'string'}, 'slug': {'index': 1, 'type': 'string'}, 'username': {'index': 0, 'type': 'string'}}}, 'message': {'index': 2, 'type': 'string'}, 'originalRoom': {'index': 9, 'type': 'nestedObject', 'nestedItems': {'title': {'index': 0, 'type': 'string'}, 'urlTemplate': {'index': 1, 'type': 'urlTemplate', 'nestedItems': {'hasMultipleTypes': {'index': 1, 'type': 'int'}, 'key': {'index': 0, 'type': 'string'}, 'vars': {'index': 2, 'type': 'stringArray'}}}}}, 'tags': {'index': 6, 'type': 'nestedArray', 'nestedItems': {'length': {'index': 2, 'type': 'int'}, 'positions': {'index': 3, 'type': 'intArray'}, 'slug': {'index': 1, 'type': 'string'}, 'text': {'index': 0, 'type': 'string'}}}, 'theme': {'index': 10, 'type': 'string'}, 'timestamp': {'index': 8, 'type': 'int'}, 'version': {'index': 0, 'type': 'string'}}}}, 'emotes': {'global': [{'name': 'smile', 'pattern': ':)', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/smile.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/smile.gif'}, {'name': 'frown', 'pattern': ':(', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/frown.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/frown.gif'}, {'name': 'dead', 'pattern': 'XD', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/dead.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/dead.gif'}, {'name': 'neutral', 'pattern': ':|', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/neutral.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/neutral.gif'}, {'name': 'crying', 'pattern': ":'(", 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/crying.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/crying.gif'}, {'name': 'open-mouth-smile', 'pattern': ':-d', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/open-mouth-smile.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/open-mouth-smile.gif'}, {'name': 'shock', 'pattern': ':O', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/shock.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/shock.gif'}, {'name': 'wink', 'pattern': ';)', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/wink.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/wink.gif'}, {'name': 'disapproval', 'pattern': ']:', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/disapproval.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/disapproval.gif'}, {'name': 'evil-open-mouth', 'pattern': '>:D', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/evil-open-mouth.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/evil-open-mouth.gif'}, {'name': 'evil-smile', 'pattern': '>:-)', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/evil-smile.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/evil-smile.gif'}, {'name': 'evil-wink', 'pattern': '>;)', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/evil-wink.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/evil-wink.gif'}, {'name': 'caret-smile', 'pattern': ':>', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/caret-smile.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/caret-smile.gif'}, {'name': 'caret-wink', 'pattern': ';>', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/caret-wink.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/caret-wink.gif'}, {'name': 'caret-sad', 'pattern': ":'<", 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/caret-sad.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/caret-sad.gif'}, {'name': 'cat-smile', 'pattern': ':3', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/cat-smile.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/cat-smile.gif'}, {'name': 'cat-wink', 'pattern': ';3', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/cat-wink.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/cat-wink.gif'}, {'name': 'cat-evil-smile', 'pattern': '>:3', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/cat-evil-smile.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/cat-evil-smile.gif'}, {'name': 'wes', 'pattern': 'wesFace', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/wes.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/wes.gif'}, {'name': 'meow-love', 'pattern': 'meowLove', 'locked': false, 'animated': true, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/meow-love.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/meow-love.gif'}, {'name': 'meow-zzz', 'pattern': 'meowZZZ', 'locked': false, 'animated': true, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/meow-zzz.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/meow-zzz.gif'}, {'name': 'catalystmint', 'pattern': 'catalystmint', 'locked': false, 'animated': false, 'image': 'https://stream-me.storage.googleapis.com/emoticon/global/catalystmint.png', 'animatedImage': 'https://stream-me.storage.googleapis.com/emoticon/global/catalystmint.gif'}, {'name': 'EOTW - britbongreturns', 'pattern': 'eotw', 'locked': false, 'animated': true, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/2/res/28/b6ac75ad-2f34-42c9-ad39-b5850f54e57c.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/2/res/28/b6ac75ad-2f34-42c9-ad39-b5850f54e57c.gif'}], 'channel': [{'name': 'Dab', 'pattern': '!dab', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/11/res/28/167d76ad-a2a1-4abd-9c2e-11d95e1ae588.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/11/res/28/167d76ad-a2a1-4abd-9c2e-11d95e1ae588.gif'}, {'name': 'Grind', 'pattern': '!grind', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/3/res/28/1abedc5f-100b-49a6-8d59-a207c441180e.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/3/res/28/1abedc5f-100b-49a6-8d59-a207c441180e.gif'}, {'name': 'Mic', 'pattern': '!mic', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/13/res/28/1c1ec4ee-ace3-448f-8edf-43e6fffe910b.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/13/res/28/1c1ec4ee-ace3-448f-8edf-43e6fffe910b.gif'}, {'name': 'Damb!', 'pattern': '!damb', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/12/res/28/208851c0-15cd-49e0-b79f-26f21386b4e9.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/12/res/28/208851c0-15cd-49e0-b79f-26f21386b4e9.gif'}, {'name': 'Chill', 'pattern': '!chill', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/12/res/28/258193e1-2ff7-4d99-b715-b2e1f347c7b3.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/12/res/28/258193e1-2ff7-4d99-b715-b2e1f347c7b3.gif'}, {'name': 'Lighter', 'pattern': '!lighter', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/1/res/28/2c75a3df-f7d6-41e7-925a-1925948a57ca.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/1/res/28/2c75a3df-f7d6-41e7-925a-1925948a57ca.gif'}, {'name': 'Happy', 'pattern': '!happy', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/4/res/28/40de6bc0-c1e4-4a46-8950-5bdd33e6742b.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/4/res/28/40de6bc0-c1e4-4a46-8950-5bdd33e6742b.gif'}, {'name': 'Sweat', 'pattern': '!sweat', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/7/res/28/47df171f-0dc2-4e1b-aa6e-cea16e472f6c.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/7/res/28/47df171f-0dc2-4e1b-aa6e-cea16e472f6c.gif'}, {'name': 'Hype', 'pattern': '!hype', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/6/res/28/4fbdfa2e-eb59-4716-8753-8f1a017931dc.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/6/res/28/4fbdfa2e-eb59-4716-8753-8f1a017931dc.gif'}, {'name': 'Point', 'pattern': '!point', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/7/res/28/557ae1cc-c98e-4322-9190-410d8671d899.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/7/res/28/557ae1cc-c98e-4322-9190-410d8671d899.gif'}, {'name': 'RIP', 'pattern': '!RIP', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/3/res/28/6370ad11-876a-416e-a88b-6b9afa7364ac.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/3/res/28/6370ad11-876a-416e-a88b-6b9afa7364ac.gif'}, {'name': 'Energy', 'pattern': '!energy', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/4/res/28/6dcfe174-4f02-4618-94fa-a32fde2b5fff.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/4/res/28/6dcfe174-4f02-4618-94fa-a32fde2b5fff.gif'}, {'name': 'clap', 'pattern': '!clap', 'locked': false, 'animated': true, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/5/res/28/7658e5a4-5f64-49a2-9e56-963074833c23.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/5/res/28/7658e5a4-5f64-49a2-9e56-963074833c23.gif'}, {'name': 'Coffee', 'pattern': '!coffee', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/3/res/28/86ee866e-a16c-42d8-b3b1-6d5febc44171.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/3/res/28/86ee866e-a16c-42d8-b3b1-6d5febc44171.gif'}, {'name': 'WSC', 'pattern': '!WSC', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/2/res/28/8e68b1fa-6cdc-4f00-93fd-0449e89cd136.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/2/res/28/8e68b1fa-6cdc-4f00-93fd-0449e89cd136.gif'}, {'name': 'Guitar', 'pattern': '!guitar', 'locked': false, 'animated': false, 'image': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/1/res/28/a2df54f5-5940-4878-9444-5020b84a8ab5.png', 'animatedImage': 'https://user-image.creekcdn.com/mediasvc/v1/user/emoticon/v/1/res/28/a2df54f5-5940-4878-9444-5020b84a8ab5.gif'}]}, 'roleInfo': {'role': 'guest', 'chatActions': [], 'messageActions': {'admin': [], 'banned': [], 'participantMod': [], 'moderator': [], 'owner': [], 'participantUser': [], 'user': [], 'muted': [], 'guest': [], 'mutedGuest': [], 'bannedGuest': []}, 'userActions': {'admin': [], 'banned': [[8, 9]], 'participantMod': [[8, 9]], 'moderator': [[8, 9]], 'owner': [[8, 9]], 'participantUser': [[8, 9]], 'user': [[8, 9]], 'muted': [[8, 9]], 'guest': [], 'mutedGuest': [], 'bannedGuest': []}, 'canChat': false, 'canChangeRoom': false, 'canAuditRoster': false, 'canErase': false, 'canDeleteHistory': false, 'subscribed': false, 'supporter': false}, 'commands': [{'action': 'mute', 'definition': 'Prevent a user from chatting in this chatroom', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/mute/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'User has been muted. To unmute this user, type /unmute <username>. To limit a mute for a number of minutes, type /mute <username> <minutes>.'}, {'action': 'unmute', 'definition': 'Remove mute status from a user', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/unmute/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'ban', 'definition': "Prevent a user's ip address from chatting in this chatroom", 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/ban/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'User has been banned. To unban this user, type /unban <username>.'}, {'action': 'unban', 'definition': 'Allow user to rejoin this chatroom', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/unban/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'shadowban', 'definition': "Prevent a user's ip address from chatting in this chatroom", 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin'], 'uri': '/api-commands/v1/room/%s/command/shadowban/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'User has been shadow banned. To unban this user, type /unshadowban <username>.'}, {'action': 'unshadowban', 'definition': 'Allow user to rejoin this chatroom', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin'], 'uri': '/api-commands/v1/room/%s/command/unshadowban/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'pin', 'definition': 'Pin a message to the top of the chat window in this chatroom', 'arguments': [{'display': '<message>', 'name': 'message', 'type': 'string'}], 'acceptedRoles': ['admin', 'owner'], 'uri': '/api-commands/v1/room/%s/command/pin', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': 'To unpin this message, type /unpin.'}, {'action': 'unpin', 'definition': 'Remove pinned message from chat window in this chatroom', 'arguments': [], 'acceptedRoles': ['admin', 'owner'], 'uri': '/api-commands/v1/room/%s/command/unpin', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'ignore', 'definition': "Ignore a user's chat messages", 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator', 'user'], 'uri': '/api-commands/v1/room/%s/command/ignore/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'This user has been ignored. To unignore this user, type /unignore <username>. To see a list of all ignored users, type /ignoredlist.'}, {'action': 'unignore', 'definition': "Unignore a user's chat messages", 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/room/%s/command/unignore/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'ignoredlist', 'definition': 'Gets list of ignored usernames', 'arguments': [], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/room/%s/command/ignoredlist', 'uriParams': ['roomId'], 'method': 'GET', 'alias': [], 'tip': ''}, {'action': 'mod', 'definition': 'Promote a user to moderator role, use "unmod" to remove role', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/mod/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'User has been modded. To unmod this user, type /unmod <username>. To see a list of all your mods, type /mods.'}, {'action': 'unmod', 'definition': 'Demote a user from moderator role', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/unmod/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'mods', 'definition': 'Show a list of moderators in this chatroom', 'arguments': [], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/room/%s/command/mods', 'uriParams': ['roomId'], 'method': 'GET', 'alias': [], 'tip': ''}, {'action': 'clearhistory', 'definition': 'Clear history in a chatroom that you own', 'arguments': [], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/history', 'uriParams': ['roomId'], 'method': 'DELETE', 'alias': [], 'tip': ''}, {'action': 'mode', 'definition': 'Change the type of users allowed to chat in this chatroom: modonly, subonly, users, verified, anonymous"', 'arguments': [{'display': '[modonly | subonly | users | verified | anonymous]', 'name': 'mode', 'type': 'string'}], 'acceptedRoles': ['admin', 'owner', 'moderator'], 'uri': '/api-commands/v1/room/%s/command/mode', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'kick', 'definition': 'Eject a user from chat temporarily', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin'], 'uri': '/api-commands/v1/room/%s/command/kick/user/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'title', 'definition': 'Update the stream title in your chatroom', 'arguments': [{'display': '<stream title>', 'name': 'title', 'type': 'string'}], 'acceptedRoles': ['admin', 'owner'], 'uri': '/api-commands/v1/room/%s/command/title', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'blacklist', 'definition': 'Add a word to the blacklist in a chatroom that you own', 'arguments': [{'display': '<word>', 'name': 'word', 'type': 'string'}], 'acceptedRoles': ['admin', 'owner'], 'uri': '/api-commands/v1/room/%s/command/blacklist', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': 'Word has been added to blacklist. To remove a word from the blacklist, type /unblacklist <word>'}, {'action': 'unblacklist', 'definition': 'Remove a word from the blacklist in a chatroom that you own', 'arguments': [{'display': '<word>', 'name': 'word', 'type': 'string'}], 'acceptedRoles': ['admin', 'owner'], 'uri': '/api-commands/v1/room/%s/command/unblacklist', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'gift', 'definition': 'Gifts sparkles to the user specified', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}, {'display': '<amount>', 'name': 'amount', 'type': 'integer'}, {'display': '<message>', 'name': 'note', 'type': 'string'}], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/command/gift/user/%s', 'uriParams': ['userPublicId'], 'method': 'POST', 'alias': [], 'tip': ''}, {'action': 'me', 'definition': 'Displays various information about yourself', 'arguments': [], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/room/%s/command/me', 'uriParams': ['roomId'], 'method': 'GET', 'alias': [], 'tip': ''}, {'action': 'streamstats', 'definition': 'Show a list of streaming stats for your current live stream', 'arguments': [], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/room/%s/command/streamstats', 'uriParams': ['roomId'], 'method': 'GET', 'alias': [], 'tip': ''}, {'action': 'whisper', 'definition': 'Send a private chat to a user', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}, {'display': '<message>', 'name': 'message', 'type': 'string'}], 'acceptedRoles': ['all'], 'uri': '/api-commands/v1/command/whisper/user/%s', 'uriParams': ['userPublicId'], 'method': 'POST', 'alias': ['w'], 'tip': 'Did you know you can simply use /w to whisper?'}, {'action': 'raffle', 'definition': 'Create a raffle for the current chatroom', 'arguments': [{'display': '[followers, subscribers, supporters, all] exclude <username(s)> title <description>', 'name': 'options', 'type': 'split'}], 'acceptedRoles': ['admin', 'owner'], 'uri': '/api-commands/v1/room/%s/command/raffle', 'uriParams': ['roomId'], 'method': 'PUT', 'alias': [], 'tip': ''}, {'action': 'link', 'definition': 'links a room', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user'}], 'acceptedRoles': ['admin'], 'uri': '/api-commands/v1/room/%s/command/link/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'Link request sent (If room is not yet linked, run /link command in other room)'}, {'action': 'unlink', 'definition': 'unlinks a linked room', 'arguments': [{'display': '@username', 'name': 'username', 'type': 'user', 'optional': true}], 'acceptedRoles': ['admin'], 'uri': '/api-commands/v1/room/%s/command/unlink/%s', 'uriParams': ['roomId', 'userPublicId'], 'method': 'PUT', 'alias': [], 'tip': 'The room has been unlinked'}], 'colors': {'user': [{'id': 7, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Pleb Gray', 'color': '#666666', 'purchasable': false, 'locked': false, 'active': false}, {'id': 195, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Lavender', 'color': '#AEA8D3', 'purchasable': true, 'locked': true, 'active': false}, {'id': 198, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Mint Green', 'color': '#68C3A3', 'purchasable': true, 'locked': true, 'active': false}, {'id': 201, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Saffron Yellow', 'color': '#F9BF3B', 'purchasable': true, 'locked': true, 'active': false}, {'id': 204, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Salmon Pink', 'color': '#E26A6A', 'purchasable': true, 'locked': true, 'active': false}, {'id': 207, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Confetti Yellow', 'color': '#E9D460', 'purchasable': true, 'locked': true, 'active': false}, {'id': 210, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Neon Green', 'color': '#00FF00', 'purchasable': true, 'locked': true, 'active': false}, {'id': 213, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Electric Violet', 'color': '#BA0BE0', 'purchasable': true, 'locked': true, 'active': false}, {'id': 216, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Blaze Orange', 'color': '#FF6600', 'purchasable': true, 'locked': true, 'active': false}, {'id': 219, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Turquoise', 'color': '#00E9E3', 'purchasable': true, 'locked': true, 'active': false}, {'id': 221, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Persian Rose Pink', 'color': '#FF1D8E', 'purchasable': true, 'locked': true, 'active': false}, {'id': 226, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Lemon Twist', 'color': '#F3F315', 'purchasable': true, 'locked': true, 'active': false}, {'id': 229, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Spring Green', 'color': '#1DFF8E', 'purchasable': true, 'locked': true, 'active': false}, {'id': 232, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Jazzberry Jam', 'color': '#A50B5E', 'purchasable': true, 'locked': true, 'active': false}, {'id': 236, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Flamingo Pink', 'color': '#FF86F5', 'purchasable': true, 'locked': true, 'active': false}, {'id': 241, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Gimlet', 'color': '#C3B85C', 'purchasable': true, 'locked': true, 'active': false}, {'id': 245, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Sienna', 'color': '#CC6633', 'purchasable': true, 'locked': true, 'active': false}, {'id': 248, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Fuel Yellow', 'color': '#CC9933', 'purchasable': true, 'locked': true, 'active': false}, {'id': 254, 'type': 'user', 'typeTitle': 'Global Colors', 'title': 'Eminence', 'color': '#5C2E8E', 'purchasable': true, 'locked': true, 'active': false}]}, 'pinnedMessage': null, 'poll': {}, 'greetings': [{'type': 'signup', 'action': 'https://www.stream.me/s/3/5kGM5KHGh9/q1aQz1', 'gaEventViewTracking': {'hitType': 'event', 'eventCategory': 'chat', 'eventAction': 'signupView', 'eventLabel': 'chatGreeting'}, 'gaEventClickTracking': {'hitType': 'event', 'eventCategory': 'chat', 'eventAction': 'signupClick', 'eventLabel': 'chatGreeting'}, 'intialDelay': 300, 'repeating': true, 'repeatDelay': 300, 'message': ['v2', 'signupstreamme', "Don't be a troll forever! Sign up now and access more features and show StreamMe your support!", [], [], [], [], [], 1526499542, null, 'greeting']}]}, [ 'Date',
		'Wed, 16 May 2018 19:39:02 GMT',
		'Content-Type',
		'application/json; charset=utf-8',
		'Transfer-Encoding',
		'chunked',
		'Connection',
		'close',
		'Set-Cookie',
		'__cfduid=da015712f7ac230284e1ffc3138c894421526499541; expires=Thu, 16-May-19 19:39:01 GMT; path=/; domain=.stream.me; HttpOnly',
		'Vary',
		'Accept-Encoding',
		'ETag',
		'W/"6b21-BarruHH1JNcqGnFGdygiDFDAhOw"',
		'X-Proxy-Read-Timeout',
		'20s',
		'X-Frame-Options',
		'SAMEORIGIN',
		'Strict-Transport-Security',
		'max-age=15552000; includeSubDomains',
		'X-Content-Type-Options',
		'nosniff',
		'X-XSS-Protection',
		'1; mode=block',
		'Expect-CT',
		'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
		'Server',
		'cloudflare',
		'CF-RAY',
		'41c04ed97fe95831-DFW' ]);
}

function nockRoomNotFound () {
	nock('https://www.stream.me:443', {'encodedQueryParams': true})
	.get('/api-web/v1/chat/room/this%20roomId%20doesn%27t%20exist')
	.reply(404, {'reasons': [{'message': 'Chat Room not found', 'code': 'CHAT_CHANNEL_NOT_FOUND', 'level': 'error'}]}, [ 'Date',
		'Wed, 16 May 2018 18:55:37 GMT',
		'Content-Type',
		'application/json; charset=utf-8',
		'Transfer-Encoding',
		'chunked',
		'Connection',
		'close',
		'Set-Cookie',
		'__cfduid=d3d3896e16861a13e6e715e50054184971526496937; expires=Thu, 16-May-19 18:55:37 GMT; path=/; domain=.stream.me; HttpOnly',
		'Vary',
		'Accept-Encoding',
		'ETag',
		'W/"5f-qJ3QhbTEnqLInVARpzoxjBq0gHY"',
		'Strict-Transport-Security',
		'max-age=15552000; includeSubDomains',
		'X-Content-Type-Options',
		'nosniff',
		'Expect-CT',
		'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
		'Server',
		'cloudflare',
		'CF-RAY',
		'41c00f4259fd57ef-DFW' ]);
}
